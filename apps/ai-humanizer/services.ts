
import { GoogleGenAI, Type } from "@google/genai";
import { AnalysisResult } from "./types";

const detectionSchema = {
    type: Type.OBJECT,
    properties: {
        aiScore: {
            type: Type.NUMBER,
            description: "A score from 0 to 100 representing the likelihood the text is AI-generated."
        },
        summary: {
            type: Type.STRING,
            description: "A brief, one-sentence summary of the analysis."
        },
        perplexity: {
            type: Type.OBJECT,
            properties: {
                value: { type: Type.STRING, description: "e.g., 'Low', 'Medium', 'High'" },
            },
        },
        burstiness: {
            type: Type.OBJECT,
            properties: {
                value: { type: Type.STRING, description: "e.g., 'Low', 'Medium', 'High'" },
            },
        },
        uniformity: {
            type: Type.OBJECT,
            properties: {
                value: { type: Type.STRING, description: "e.g., 'Uniform', 'Varied'" },
            },
        },
    },
    required: ["aiScore", "summary", "perplexity", "burstiness", "uniformity"],
};

export const detectAiContent = async (text: string, apiKey: string): Promise<AnalysisResult> => {
    if (!apiKey) throw new Error("API key not configured.");
    const ai = new GoogleGenAI({ apiKey });

    try {
        const systemInstruction = `You are a critical AI content analyst. Your task is to evaluate a given text and determine the likelihood that it was generated by an AI. Provide a score from 0-100, a summary, and analyses of perplexity, burstiness, and uniformity. Perplexity measures predictability (low perplexity is AI-like). Burstiness measures sentence length variation (low burstiness is AI-like). Uniformity measures structural consistency (high uniformity is AI-like). Return only the JSON object.`;

        const response = await ai.models.generateContent({
            model: "gemini-2.5-flash",
            contents: `Please analyze the following text: "${text}"`,
            config: {
                systemInstruction,
                responseMimeType: "application/json",
                responseSchema: detectionSchema,
            }
        });

        const jsonText = response.text;
        return JSON.parse(jsonText);
    } catch (error) {
        console.error("Error detecting AI content:", error);
        if (error instanceof Error && (error.message.includes('API_KEY_INVALID') || error.message.includes('API key not valid'))) {
          throw new Error("The provided Gemini API Key is invalid or expired.");
        }
        throw new Error("Failed to analyze content. The AI assistant might be temporarily unavailable.");
    }
};

export const humanizeText = async (text: string, apiKey: string): Promise<string> => {
    if (!apiKey) throw new Error("API key not configured.");
    const ai = new GoogleGenAI({ apiKey });

    try {
        const systemInstruction = `You are an expert content editor. Your mission is to rewrite the provided text to make it completely undetectable by AI content detectors. Your primary goal is to achieve a final AI detection score below 10% while preserving the original message's core meaning. To do this, you will meticulously apply the following humanization techniques:

1.  **Mix Up Sentence Structures:**
    *   Vary sentence length significantly. Combine short, punchy sentences with longer, more complex, and even winding ones.
    *   Break predictable patterns. Avoid starting sentences with the same words or structures repeatedly. Swap common transitions like "Additionally" or "However" for more casual alternatives like "Plus," "But," or "So."
    *   Introduce natural-feeling sentence fragments where appropriate for emphasis.

2.  **Ditch Keyword Overuse & Formal Vocabulary:**
    *   Identify and replace repetitive words and phrases with synonyms or by rephrasing the entire sentence.
    *   Swap out overly formal, academic, or "robotic" vocabulary (e.g., "It is imperative," "utilize") with more common, conversational words (e.g., "You've got to," "use").

3.  **Play with Punctuation for a Human Rhythm:**
    *   Use punctuation—commas, semicolons, em dashes (—)—to create a more varied and natural reading rhythm. Avoid rigid, grammatically perfect punctuation patterns.
    *   Don't be afraid to use punctuation for stylistic effect, not just pure grammatical correctness.

4.  **Add a Human Touch and Personality:**
    *   Inject personality. Use idioms, casual phrases ("no big deal"), and contractions ("can't," "it's") to make the text feel more authentic.
    *   Incorporate rhetorical questions to engage the reader ("Who wouldn’t want that?").
    *   Adopt a personal angle where possible ("I've always thought...").

5.  **Embrace Subtle Chaos and Imperfection:**
    *   Vary paragraph lengths. Mix short paragraphs with longer ones to break up the visual uniformity of the text.
    *   The goal is to sound natural, not perfectly polished. Read it aloud; if it sounds robotic, tweak it until it flows conversational.

**Strict Output Requirements:**
*   You **MUST** retain the core message and all key information from the original text.
*   You **MUST** output ONLY the rewritten, humanized text. Do not include any pre-amble, explanations, apologies, or titles like "Rewritten Text:". Just the final text.`;

        const response = await ai.models.generateContent({
            model: "gemini-2.5-flash",
            contents: `Please humanize the following text: "${text}"`,
            config: {
                systemInstruction,
            }
        });

        return response.text;

    } catch (error) {
        console.error("Error humanizing text:", error);
        if (error instanceof Error && (error.message.includes('API_KEY_INVALID') || error.message.includes('API key not valid'))) {
            throw new Error("The provided Gemini API Key is invalid or expired.");
        }
        throw new Error("Failed to humanize text. The AI assistant might be temporarily unavailable.");
    }
};
