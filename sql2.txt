-- Table for WebRTC signaling
create table if not exists webrtc_signals (
  id bigint generated by default as identity primary key,
  sender_id uuid references public.profiles on delete cascade not null,
  receiver_id uuid references public.profiles on delete cascade not null,
  signal_type text not null, -- 'offer', 'answer', 'ice-candidate', 'hang-up'
  payload jsonb not null,
  created_at timestamp with time zone not null default now()
);

-- Enable Row Level Security
alter table webrtc_signals enable row level security;

-- Policies for webrtc_signals
drop policy if exists "Users can insert their own signals." on webrtc_signals;
create policy "Users can insert their own signals." on webrtc_signals
  for insert with check (auth.uid() = sender_id);

drop policy if exists "Users can view signals sent to them." on webrtc_signals;
create policy "Users can view signals sent to them." on webrtc_signals
  for select using (auth.uid() = receiver_id);

-- Enable realtime on webrtc_signals table
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM pg_publication_tables
    WHERE pubname = 'supabase_realtime' AND tablename = 'webrtc_signals'
  ) THEN
    ALTER PUBLICATION supabase_realtime ADD TABLE webrtc_signals;
  END IF;
END $$;